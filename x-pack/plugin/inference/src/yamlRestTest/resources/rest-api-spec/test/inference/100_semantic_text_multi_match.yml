setup:
  - requires:
      cluster_features: "search.semantic_multi_match_query_rewrite_interception_supported"
      reason: semantic_text multi_match support introduced in 9.2.0

  - do:
      inference.put:
        task_type: sparse_embedding
        inference_id: sparse-inference-id
        body: >
          {
            "service": "test_service",
            "service_settings": {
              "model": "my_model",
              "api_key": "abc64"
            },
            "task_settings": {
            }
          }

  - do:
      inference.put:
        task_type: text_embedding
        inference_id: dense-inference-id
        body: >
          {
            "service": "text_embedding_test_service",
            "service_settings": {
              "model": "my_model",
              "dimensions": 10,
              "api_key": "abc64",
              "similarity": "COSINE"
            },
            "task_settings": {
            }
          }

  - do:
      indices.create:
        index: test-semantic-index
        body:
          mappings:
            properties:
              title:
                type: semantic_text
                inference_id: sparse-inference-id
              content:
                type: semantic_text
                inference_id: sparse-inference-id
              summary:
                type: semantic_text
                inference_id: dense-inference-id

  - do:
      indices.create:
        index: test-mixed-index
        body:
          mappings:
            properties:
              title:
                type: text
              semantic_content:
                type: semantic_text
                inference_id: sparse-inference-id
              tags:
                type: keyword

  - do:
      indices.create:
        index: test-text-only-index
        body:
          mappings:
            properties:
              title:
                type: text
              content:
                type: text

---
"Multi-match query on semantic_text fields":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Machine learning algorithms"
          content: "Deep neural networks for computer vision"
          summary: "AI and machine learning fundamentals"
        refresh: true

  - do:
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "machine learning neural networks"
              fields: ["title", "content"]
              type: "best_fields"

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }

---
"Multi-match query with field boosts on semantic_text":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Advanced algorithms"
          content: "Machine learning and artificial intelligence"
          summary: "Comprehensive AI guide"
        refresh: true

  - do:
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "machine learning"
              fields: ["title^2", "content^1.5", "summary"]
              type: "best_fields"

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }

---
"Multi-match query on mixed semantic_text and text fields":
  - do:
      index:
        index: test-mixed-index
        id: doc_1
        body:
          title: "Quantum computing breakthrough"
          semantic_content: "Revolutionary quantum algorithms for cryptography"
          tags: ["quantum", "computing"]
        refresh: true

  - do:
      index:
        index: test-mixed-index
        id: doc_2
        body:
          title: "AI research advances"
          semantic_content: "Neural network architectures and deep learning"
          tags: ["ai", "research"]
        refresh: true

  - do:
      search:
        index: test-mixed-index
        body:
          query:
            multi_match:
              query: "quantum algorithms"
              fields: ["title", "semantic_content"]
              type: "best_fields"

  - match: { hits.total.value: 2 }

---
"Multi-match query with wildcard fields on semantic_text":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Natural language processing"
          content: "Text analysis and language models"
          summary: "NLP fundamentals and applications"
        refresh: true

  - do:
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "language processing"
              fields: ["*"]
              type: "most_fields"

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }

---
"Multi-match most_fields query on semantic_text":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Computer vision systems"
          content: "Image recognition and computer vision algorithms"
          summary: "Visual processing and pattern recognition"
        refresh: true

  - do:
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "computer vision"
              fields: ["title", "content", "summary"]
              type: "most_fields"

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }

---
"Multi-match query with overall boost on mixed fields":
  - do:
      index:
        index: test-mixed-index
        id: doc_1
        body:
          title: "Blockchain technology"
          semantic_content: "Distributed ledger systems and cryptocurrency"
          tags: ["blockchain", "crypto"]
        refresh: true

  - do:
      search:
        index: test-mixed-index
        body:
          query:
            multi_match:
              query: "blockchain systems"
              fields: ["title^2", "semantic_content"]
              type: "best_fields"
              boost: 2.0

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }

---
"Multi-match query across multiple indices with different field types":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Robotics automation"
          content: "Autonomous systems and robotic controls"
        refresh: true

  - do:
      index:
        index: test-text-only-index
        id: doc_2
        body:
          title: "Robotics research"
          content: "Industrial automation and robotics"
        refresh: true

  - do:
      search:
        index: "test-semantic-index,test-text-only-index"
        body:
          query:
            multi_match:
              query: "robotics automation"
              fields: ["title", "content"]
              type: "best_fields"

  - match: { hits.total.value: 2 }

---
"Multi-match query with pattern fields and boosts":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Artificial intelligence"
          content: "AI algorithms and machine learning"
          summary: "Comprehensive AI overview"
        refresh: true

  - do:
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "artificial intelligence"
              fields: ["title^3", "*content*^1.5", "summ*^2"]
              type: "best_fields"

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }

---
"Multi-match query error on unsupported type with multiple fields":
  - do:
      catch: /multi_match query with type \[cross_fields\] is not supported for semantic_text fields/
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "test query"
              fields: ["title", "content"]
              type: "cross_fields"

---
"Multi-match query error on unsupported type with single field":
  - do:
      catch: /multi_match query with type \[phrase\] is not supported for semantic_text fields/
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "test query"
              fields: ["title"]
              type: "phrase"

---
"Multi-match single field optimization":
  - do:
      index:
        index: test-semantic-index
        id: doc_1
        body:
          title: "Single field test"
          content: "This should be optimized to single semantic query"
        refresh: true

  - do:
      search:
        index: test-semantic-index
        body:
          query:
            multi_match:
              query: "single field optimization"
              fields: ["title^2"]
              type: "best_fields"
              boost: 1.5

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._id: "doc_1" }
